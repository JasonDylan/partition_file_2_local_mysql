INSERT INTO db_junglescout_amazon.tb_data_week_test (
  created_datetime,
  modified_datetime,
  marketplace,
  root_category_id,
  year,
  week,
  start_date,
  end_date,
  asin,
  seller_id,
  is_available,
  category_rank,
  subcategory_rank,
  price,
  review_count,
  ratings,
  revenue,
  revenue_1p,
  revenue_3p,
  sales,
  sales_1p,
  sales_3p,
  revenue_org,
  revenue_1p_org,
  revenue_3p_org,
  sales_org,
  sales_1p_org,
  sales_3p_org
)
WITH RECURSIVE SplitSellerId AS (
  SELECT
    created_datetime,
    modified_datetime,
    marketplace,
    root_category_id,
    year,
    week,
    start_date,
    end_date,
    is_available,
    category_rank,
    subcategory_rank,
    price,
    review_count,
    ratings,
    revenue,
    revenue_1p,
    revenue_3p,
    sales,
    sales_1p,
    sales_3p,
    SUBSTRING_INDEX(seller_id_mode, '|', 1) AS seller_id,
    SUBSTRING(seller_id_mode, LENGTH(SUBSTRING_INDEX(seller_id_mode, '|', 1)) + 2) AS remaining_sellers,
    asin,
    (LENGTH(seller_id_mode) - LENGTH(REPLACE(seller_id_mode, '|', '')) + 1) AS seller_num
  FROM (
    SELECT
      created_datetime,
      modified_datetime,
      marketplace,
      root_category_id,
      year,
      week,
      start_date,
      end_date,
      asin,
      is_available,
      category_rank,
      subcategory_rank,
      price,
      review_count,
      ratings,
      revenue,
      revenue_1p,
      revenue_3p,
      sales,
      sales_1p,
      sales_3p,
      seller_id_mode
    FROM
      db_junglescout_amazon.tb_sales_estimates_weekly_v2_old
      PARTITION (p0)
  ) AS RandomSelection
  UNION ALL
  SELECT
    created_datetime,
    modified_datetime,
    marketplace,
    root_category_id,
    year,
    week,
    start_date,
    end_date,
    is_available,
    category_rank,
    subcategory_rank,
    price,
    review_count,
    ratings,
    revenue,
    revenue_1p,
    revenue_3p,
    sales,
    sales_1p,
    sales_3p,
    SUBSTRING_INDEX(remaining_sellers, '|', 1) AS seller_id,
    SUBSTRING(remaining_sellers, LENGTH(SUBSTRING_INDEX(remaining_sellers, '|', 1)) + 2) AS remaining_sellers,
    asin,
    seller_num
  FROM
    SplitSellerId
  WHERE
    remaining_sellers != ''
)


SELECT
  created_datetime,
  modified_datetime,
  marketplace,
  root_category_id,
  year,
  week,
  start_date,
  end_date,
  asin,
  seller_id,
  is_available,
  category_rank,
  subcategory_rank,
  price,
  review_count,
  ratings,
  revenue / seller_num AS revenue,
  revenue_1p / seller_num AS revenue_1p,
  revenue_3p / seller_num AS revenue_3p,
  sales / seller_num AS sales,
  sales_1p / seller_num AS sales_1p,
  sales_3p / seller_num AS sales_3p,
  revenue AS revenue_org,
  revenue_1p AS revenue_1p_org,
  revenue_3p AS revenue_3p_org,
  sales AS sales_org,
  sales_1p AS sales_1p_org,
  sales_3p AS sales_3p_org
FROM
  SplitSellerId;